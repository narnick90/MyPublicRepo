using System;
using System.IO;
using System.Xml.Serialization;

[XmlRoot("cXML", Namespace = "http://www.w3.org/2001/XMLSchema-instance")]
public class CXML
{
    [XmlAttribute("payloadID")]
    public string PayloadID { get; set; }

    [XmlAttribute("timestamp")]
    public string Timestamp { get; set; }

    [XmlAttribute("version")]
    public string Version { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlAttribute("DOCTYPE", Namespace = "")]
    public string DOCTYPE { get; set; }

    public Header Header { get; set; }
    public Request Request { get; set; }
}

public class Header
{
    public From From { get; set; }
    public To To { get; set; }
    public Sender Sender { get; set; }
}

public class From
{
    public Credential Credential { get; set; }
}

public class To
{
    public Credential Credential { get; set; }
}

public class Sender
{
    public Credential Credential { get; set; }
    public string UserAgent { get; set; }
}

public class Credential
{
    [XmlAttribute("domain")]
    public string Domain { get; set; }

    public string Identity { get; set; }
}

public class Request
{
    [XmlAttribute("deploymentMode")]
    public string DeploymentMode { get; set; }

    public InvoiceDetailRequest InvoiceDetailRequest { get; set; }
}

public class InvoiceDetailRequest
{
    public InvoiceDetailRequestHeader InvoiceDetailRequestHeader { get; set; }
    public InvoiceDetailorder InvoiceDetailorder { get; set; }
    public InvoiceDetailSummary InvoiceDetailSummary { get; set; }
}

public class InvoiceDetailRequestHeader
{
    [XmlAttribute("invoiceOrigin")]
    public string InvoiceOrigin { get; set; }

    [XmlAttribute("invoiceDate")]
    public string InvoiceDate { get; set; }

    [XmlAttribute("operation")]
    public string Operation { get; set; }

    [XmlAttribute("purpose")]
    public string Purpose { get; set; }

    [XmlAttribute("invoiceID")]
    public string InvoiceID { get; set; }

    public InvoiceDetailHeaderIndicator InvoiceDetailHeaderIndicator { get; set; }
    public InvoiceDetailLineIndicator InvoiceDetailLineIndicator { get; set; }

    // Add other properties as needed
}

public class InvoiceDetailHeaderIndicator
{
    // Add properties as needed
}

public class InvoiceDetailLineIndicator
{
    [XmlAttribute("isTaxInLine")]
    public string IsTaxInLine { get; set; }

    // Add properties as needed
}

// Define the rest of your classes and attributes following the same pattern

class Program
{
    static void Main()
    {
        CXML cxml = new CXML
        {
            PayloadID = "CVOpenICSAPRequest19102024-0000111610",
            Timestamp = "2024-01-10T23:21:56.617-08:00",
            Version = "1.2.044",
            Language = "en-US",
            DOCTYPE = "CXML SYSTEM \"http://xml.cxml.org/schemas/cXML/1.2.044/InvoiceDetail.dtd\"",
            Header = new Header
            {
                From = new From
                {
                    Credential = new Credential { Domain = "VendorID", Identity = "0010003169" }
                },
                To = new To
                {
                    Credential = new Credential { Domain = "NetworkId", Identity = "AN01058401230-T" }
                },
                Sender = new Sender
                {
                    Credential = new Credential { Domain = "NetworkID", Identity = "AN01492421290-T" },
                    UserAgent = "openICS adapter"
                }
            },
            Request = new Request
            {
                DeploymentMode = "test",
                InvoiceDetailRequest = new InvoiceDetailRequest
                {
                    // Populate InvoiceDetailRequest properties here
                }
            }
        };

        XmlSerializer serializer = new XmlSerializer(typeof(CXML));

        using (StreamWriter writer = new StreamWriter("output.xml"))
        {
            serializer.Serialize(writer, cxml);
            Console.WriteLine("XML file generated successfully.");
        }
    }
}


----------------------------------------------------------------

using System;
using System.IO;
using System.Xml;
using System.Xml.Serialization;

[XmlRoot("cXML", Namespace = "http://www.w3.org/2001/XMLSchema-instance")]
public class CXML
{
    [XmlAttribute("payloadID")]
    public string PayloadID { get; set; }

    [XmlAttribute("timestamp")]
    public string Timestamp { get; set; }

    [XmlAttribute("version")]
    public string Version { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlAttribute("DOCTYPE", Namespace = "")]
    public string DOCTYPE { get; set; }

    public Header Header { get; set; }
}

public class Header
{
    public From From { get; set; }
    public To To { get; set; }
    public Sender Sender { get; set; }
}

public class From
{
    public Credential Credential { get; set; }
}

public class To
{
    public Credential Credential { get; set; }
}

public class Sender
{
    public Credential Credential { get; set; }
    public string UserAgent { get; set; }
}

public class Credential
{
    [XmlAttribute("domain")]
    public string Domain { get; set; }

    public string Identity { get; set; }
}

class Program
{
    static void Main()
    {
        CXML cxml = new CXML
        {
            PayloadID = "CVOpenICSAPRequest19102024-0000111610",
            Timestamp = "2024-01-10T23:21:56.617-08:00",
            Version = "1.2.044",
            Language = "en-US",
            DOCTYPE = "CXML SYSTEM \"http://xml.cxml.org/schemas/cXML/1.2.044/InvoiceDetail.dtd\"",
            Header = new Header
            {
                From = new From
                {
                    Credential = new Credential { Domain = "VendorID", Identity = "0010003169" }
                },
                To = new To
                {
                    Credential = new Credential { Domain = "NetworkId", Identity = "AN01058401230-T" }
                },
                Sender = new Sender
                {
                    Credential = new Credential { Domain = "NetworkID", Identity = "AN01492421290-T" },
                    UserAgent = "openICS adapter"
                }
            }
        };

        XmlSerializer serializer = new XmlSerializer(typeof(CXML));

        using (StreamWriter writer = new StreamWriter("output.xml"))
        {
            serializer.Serialize(writer, cxml);
            Console.WriteLine("XML file generated successfully.");
        }
    }
}



----------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Xml.Serialization;

[XmlRoot("cXML")]
public class CXML
{
    [XmlAttribute("payloadID")]
    public string PayloadID { get; set; }

    [XmlAttribute("timestamp")]
    public string Timestamp { get; set; }

    [XmlAttribute("version")]
    public string Version { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    public Request Request { get; set; }
}

public class Request
{
    [XmlAttribute("deploymentMode")]
    public string DeploymentMode { get; set; }

    public InvoiceDetailRequest InvoiceDetailRequest { get; set; }
}

public class InvoiceDetailRequest
{
    public InvoiceDetailRequestHeader InvoiceDetailRequestHeader { get; set; }

    public InvoiceDetailorder InvoiceDetailorder { get; set; }

    public InvoiceDetailSummary InvoiceDetailSummary { get; set; }
}

public class InvoiceDetailRequestHeader
{
    [XmlAttribute("invoiceOrigin")]
    public string InvoiceOrigin { get; set; }

    [XmlAttribute("invoiceDate")]
    public string InvoiceDate { get; set; }

    [XmlAttribute("operation")]
    public string Operation { get; set; }

    [XmlAttribute("purpose")]
    public string Purpose { get; set; }

    [XmlAttribute("invoiceID")]
    public string InvoiceID { get; set; }

    public InvoiceDetailHeaderIndicator InvoiceDetailHeaderIndicator { get; set; }

    public InvoiceDetailLineIndicator InvoiceDetailLineIndicator { get; set; }

    public List<InvoicePartner> InvoicePartners { get; set; }

    public InvoiceDetailShipping InvoiceDetailShipping { get; set; }

    public PaymentTerm PaymentTerm { get; set; }

    public Comments Comments { get; set; }

    public List<Extrinsic> ExtrinsicElements { get; set; }
}

public class InvoiceDetailHeaderIndicator { }

public class InvoiceDetailLineIndicator
{
    [XmlAttribute("isTaxInLine")]
    public string IsTaxInLine { get; set; }
}

public class InvoicePartner
{
    public Contact Contact { get; set; }
}

public class Contact
{
    [XmlAttribute("addressID")]
    public string AddressID { get; set; }

    [XmlAttribute("role")]
    public string Role { get; set; }

    public Name Name { get; set; }

    public Email Email { get; set; }
}

public class Name
{
    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Email
{
    [XmlAttribute("Name")]
    public string Name { get; set; }

    [XmlAttribute("preferredLang")]
    public string PreferredLanguage { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class InvoiceDetailShipping
{
    public Contact ShipFrom { get; set; }

    public Contact ShipTo { get; set; }
}

public class PaymentTerm
{
    [XmlAttribute("payInNumberOfDays")]
    public int PayInNumberOfDays { get; set; }
}

public class Comments
{
    [XmlAttribute("type")]
    public string Type { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }

    public Attachment Attachment { get; set; }
}

public class Attachment
{
    public string URL { get; set; }
}

public class Extrinsic
{
    [XmlAttribute("name")]
    public string Name { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class InvoiceDetailorder
{
    public InvoiceDetailorderInfo InvoiceDetailorderInfo { get; set; }

    public InvoiceDetailItem InvoiceDetailItem { get; set; }
}

public class InvoiceDetailorderInfo
{
    public SupplierOrderInfo SupplierOrderInfo { get; set; }
}

public class SupplierOrderInfo
{
    [XmlAttribute("orderID")]
    public string OrderID { get; set; }
}

public class InvoiceDetailItem
{
    [XmlAttribute("invoiceLineNumber")]
    public int InvoiceLineNumber { get; set; }

    [XmlAttribute("quantasy")]
    public int Quantasy { get; set; }

    public string UnitofMeasure { get; set; }

    public UnitPrice UnitPrice { get; set; }

    public InvoiceDetailItemReference InvoiceDetailItemReference { get; set; }

    public SubtotalAmount SubtotalAmount { get; set; }

    public GrossAmount GrossAmount { get; set; }

    public NetAmount NetAmount { get; set; }

    public Distribution Distribution { get; set; }

    public Comments Comments { get; set; }

    public Extrinsic ExtrinsicElement { get; set; }
}

public class UnitPrice
{
    public Money Money { get; set; }
}

public class InvoiceDetailItemReference
{
    public ItemID ItemID { get; set; }

    public string Description { get; set; }

    public string Classification { get; set; }

    public Country Country { get; set; }
}

public class ItemID
{
    public string SupplierPartID { get; set; }
}

public class SubtotalAmount
{
    public Money Money { get; set; }
}

public class GrossAmount
{
    public Money Money { get; set; }
}

public class NetAmount
{
    public Money Money { get; set; }
}

public class Distribution
{
    public Accounting Accounting { get; set; }

    public Charge Charge { get; set; }
}

public class Accounting
{
    public List<AccountingSegment> AccountingSegments { get; set; }
}

public class AccountingSegment
{
    [XmlAttribute("id")]
    public string ID { get; set; }

    public Name Name { get; set; }

    public Description Description { get; set; }
}

public class Charge
{
    public Money Money { get; set; }
}

public class InvoiceDetailSummary
{
    public SubtotalAmount SubtotalAmount { get; set; }

    public Tax Tax { get; set; }

    public GrossAmount GrossAmount { get; set; }

    public NetAmount SummaryNetAmount { get; set; }

    public DueAmount DueAmount { get; set; }
}

public class Tax
{
    public Money Money { get; set; }

    public string Description { get; set; }
}

public class DueAmount
{
    public Money Money { get; set; }
}

public class Money
{
    [XmlAttribute("currency")]
    public string Currency { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Country
{
    [XmlAttribute("isoCountryCode")]
    public string IsoCountryCode { get; set; }

    [XmlText]
    public string Value { get; set; }
}


------------------------------


using System;
using System.Collections.Generic;
using System.Xml.Serialization;

[XmlRoot("cXML")]
public class CXML
{
    [XmlAttribute("payloadID")]
    public string PayloadID { get; set; }

    [XmlAttribute("timestamp")]
    public string Timestamp { get; set; }

    [XmlAttribute("version")]
    public string Version { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    public Header Header { get; set; }

    public Request Request { get; set; }
}

public class Header
{
    public From From { get; set; }

    public To To { get; set; }

    public Sender Sender { get; set; }
}

public class From
{
    public Credential Credential { get; set; }
}

public class To
{
    public Credential Credential { get; set; }
}

public class Sender
{
    public Credential Credential { get; set; }

    public string UserAgent { get; set; }
}

public class Credential
{
    [XmlAttribute("domain")]
    public string Domain { get; set; }

    public string Identity { get; set; }
}

public class Request
{
    [XmlAttribute("deploymentMode")]
    public string DeploymentMode { get; set; }

    public InvoiceDetailRequest InvoiceDetailRequest { get; set; }
}

public class InvoiceDetailRequest
{
    public InvoiceDetailRequestHeader InvoiceDetailRequestHeader { get; set; }

    public InvoiceDetailorder InvoiceDetailorder { get; set; }

    public InvoiceDetailSummary InvoiceDetailSummary { get; set; }
}

public class InvoiceDetailRequestHeader
{
    [XmlAttribute("invoiceOrigin")]
    public string InvoiceOrigin { get; set; }

    [XmlAttribute("invoiceDate")]
    public string InvoiceDate { get; set; }

    [XmlAttribute("operation")]
    public string Operation { get; set; }

    [XmlAttribute("purpose")]
    public string Purpose { get; set; }

    [XmlAttribute("invoiceID")]
    public string InvoiceID { get; set; }

    public InvoiceDetailHeaderIndicator InvoiceDetailHeaderIndicator { get; set; }

    public InvoiceDetailLineIndicator InvoiceDetailLineIndicator { get; set; }

    public List<InvoicePartner> InvoicePartners { get; set; }

    public InvoiceDetailShipping InvoiceDetailShipping { get; set; }

    public PaymentTerm PaymentTerm { get; set; }

    public Comments Comments { get; set; }

    public List<Extrinsic> ExtrinsicElements { get; set; }
}

public class InvoiceDetailHeaderIndicator { }

public class InvoiceDetailLineIndicator
{
    [XmlAttribute("isTaxInLine")]
    public string IsTaxInLine { get; set; }
}

public class InvoicePartner
{
    public Contact Contact { get; set; }
}

public class Contact
{
    [XmlAttribute("addressID")]
    public string AddressID { get; set; }

    [XmlAttribute("role")]
    public string Role { get; set; }

    public Name Name { get; set; }

    public Email Email { get; set; }
}

public class Name
{
    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Email
{
    [XmlAttribute("Name")]
    public string Name { get; set; }

    [XmlAttribute("preferredLang")]
    public string PreferredLanguage { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class InvoiceDetailShipping
{
    public Contact ShipFrom { get; set; }

    public Contact ShipTo { get; set; }
}

public class PaymentTerm
{
    [XmlAttribute("payInNumberOfDays")]
    public int PayInNumberOfDays { get; set; }
}

public class Comments
{
    [XmlAttribute("type")]
    public string Type { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }

    public Attachment Attachment { get; set; }
}

public class Attachment
{
    public string URL { get; set; }
}

public class Extrinsic
{
    [XmlAttribute("name")]
    public string Name { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class InvoiceDetailorder
{
    public InvoiceDetailorderInfo InvoiceDetailorderInfo { get; set; }

    public InvoiceDetailItem InvoiceDetailItem { get; set; }
}

public class InvoiceDetailorderInfo
{
    public SupplierOrderInfo SupplierOrderInfo { get; set; }
}

public class SupplierOrderInfo
{
    [XmlAttribute("orderID")]
    public string OrderID { get; set; }
}

public class InvoiceDetailItem
{
    [XmlAttribute("invoiceLineNumber")]
    public int InvoiceLineNumber { get; set; }

    [XmlAttribute("quantasy")]
    public int Quantasy { get; set; }

    public string UnitofMeasure { get; set; }

    public UnitPrice UnitPrice { get; set; }

    public InvoiceDetailItemReference InvoiceDetailItemReference { get; set; }

    public SubtotalAmount SubtotalAmount { get; set; }

    public GrossAmount GrossAmount { get; set; }

    public NetAmount NetAmount { get; set; }

    public Distribution Distribution { get; set; }

    public Comments Comments { get; set; }

    public Extrinsic ExtrinsicElement { get; set; }
}

public class UnitPrice
{
    public Money Money { get; set; }
}

public class InvoiceDetailItemReference
{
    public ItemID ItemID { get; set; }

    public string Description { get; set; }

    public string Classification { get; set; }

    public Country Country { get; set; }
}

public class ItemID
{
    public string SupplierPartID { get; set; }
}

public class SubtotalAmount
{
    public Money Money { get; set; }
}

public class GrossAmount
{
    public Money Money { get; set; }
}

public class NetAmount
{
    public Money Money { get; set; }
}

public class Distribution
{
    public Accounting name { get; set; }

    public Charge Charge { get; set; }
}

public class Accounting
{
    public List<AccountingSegment> AccountingSegments { get; set; }
}

public class AccountingSegment
{
    [XmlAttribute("id")]
    public string ID { get; set; }

    public Name Name { get; set; }

    public Description Description { get; set; }
}

public class Charge
{
    public Money Money { get; set; }
}

public class InvoiceDetailSummary
{
    public SubtotalAmount SubtotalAmount { get; set; }

    public Tax Tax { get; set; }

    public GrossAmount GrossAmount { get; set; }

    public NetAmount SummaryNetAmount { get; set; }

    public DueAmount DueAmount { get; set; }
}

public class Tax
{
    public Money Money { get; set; }

    public string Description { get; set; }
}

public class DueAmount
{
    public Money Money { get; set; }
}

public class Money
{
    [XmlAttribute("currency")]
    public string Currency { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Country
{
    [XmlAttribute("isoCountryCode")]
    public string IsoCountryCode { get; set; }

    [XmlText]
    public string Value { get; set; }
}


using System;
using System.IO;
using System.Xml.Serialization;

class Program
{
    static void Main()
    {
        CXML cxmlInstance = new CXML
        {
            PayloadID = "CVOpenICSAPRequest19102024-0000111610",
            Timestamp = "2024-01-10T23:21:56.617-08:00",
            Version = "1.2.044",
            Language = "en-US",
            Header = new Header
            {
                From = new From
                {
                    Credential = new Credential
                    {
                        Domain = "VendorID",
                        Identity = "0010003169"
                    }
                },
                To = new To
                {
                    Credential = new Credential
                    {
                        Domain = "NetworkId",
                        Identity = "AN01058401230-T"
                    }
                },
                Sender = new Sender
                {
                    Credential = new Credential
                    {
                        Domain = "NetworkID",
                        Identity = "AN01492421290-T"
                    },
                    UserAgent = "openICS adapter"
                }
            },
            Request = new Request
            {
                DeploymentMode = "test",
                InvoiceDetailRequest = new InvoiceDetailRequest
                {
                    InvoiceDetailRequestHeader = new InvoiceDetailRequestHeader
                    {
                        // Populate other properties accordingly
                    }
                }
            }
        };

        // Serialize to XML
        XmlSerializer serializer = new XmlSerializer(typeof(CXML));
        using (TextWriter writer = new StreamWriter("output.xml"))
        {
            serializer.Serialize(writer, cxmlInstance);
        }

        Console.WriteLine("Serialization completed.");
    }
}


-------------------------------------------------


using System;
using System.IO;
using System.Xml;
using System.Xml.Serialization;

[XmlRoot("cXML")]
public class CXML
{
    [XmlAttribute("payloadID")]
    public string PayloadID { get; set; }

    [XmlAttribute("timestamp")]
    public string Timestamp { get; set; }

    [XmlAttribute("version")]
    public string Version { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    public Header Header { get; set; }
}

public class Header
{
    public From From { get; set; }

    public To To { get; set; }

    public Sender Sender { get; set; }
}

public class From
{
    public Credential Credential { get; set; }
}

public class To
{
    public Credential Credential { get; set; }
}

public class Sender
{
    public Credential Credential { get; set; }

    public string UserAgent { get; set; }
}

public class Credential
{
    [XmlAttribute("domain")]
    public string Domain { get; set; }

    public string Identity { get; set; }
}

class Program
{
    static void Main()
    {
        CXML cxml = new CXML
        {
            PayloadID = "CVOpenICSAPRequest19102024-0000111610",
            Timestamp = "2024-01-10T23:21:56.617-08:00",
            Version = "1.2.044",
            Language = "en-US",
            Header = new Header
            {
                From = new From
                {
                    Credential = new Credential
                    {
                        Domain = "VendorID",
                        Identity = "0010003169"
                    }
                },
                To = new To
                {
                    Credential = new Credential
                    {
                        Domain = "NetworkId",
                        Identity = "AN01058401230-T"
                    }
                },
                Sender = new Sender
                {
                    Credential = new Credential
                    {
                        Domain = "NetworkID",
                        Identity = "AN01492421290-T"
                    },
                    UserAgent = "openICS adapter"
                }
            }
        };

        XmlSerializer serializer = new XmlSerializer(typeof(CXML));
        using (TextWriter writer = new StreamWriter("output.xml"))
        {
            serializer.Serialize(writer, cxml);
        }
    }
}

--------------


using System;
using System.IO;
using System.Xml;
using System.Xml.Serialization;

[XmlRoot("cXML")]
public class CXML
{
    [XmlAttribute("payloadID")]
    public string PayloadID { get; set; }

    [XmlAttribute("timestamp")]
    public string Timestamp { get; set; }

    [XmlAttribute("version")]
    public string Version { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    public Request Request { get; set; }
}

public class Request
{
    [XmlAttribute("deploymentMode")]
    public string DeploymentMode { get; set; }

    public InvoiceDetailRequest InvoiceDetailRequest { get; set; }
}

public class InvoiceDetailRequest
{
    public InvoiceDetailRequestHeader InvoiceDetailRequestHeader { get; set; }

    public InvoiceDetailorder InvoiceDetailorder { get; set; }

    public InvoiceDetailSummary InvoiceDetailSummary { get; set; }
}

public class InvoiceDetailRequestHeader
{
    [XmlAttribute("invoiceOrigin")]
    public string InvoiceOrigin { get; set; }

    [XmlAttribute("invoiceDate")]
    public string InvoiceDate { get; set; }

    [XmlAttribute("operation")]
    public string Operation { get; set; }

    [XmlAttribute("purpose")]
    public string Purpose { get; set; }

    [XmlAttribute("invoiceID")]
    public string InvoiceID { get; set; }

    public InvoiceDetailHeaderIndicator InvoiceDetailHeaderIndicator { get; set; }

    public InvoiceDetailLineIndicator InvoiceDetailLineIndicator { get; set; }

    public InvoicePartner[] InvoicePartners { get; set; }

    public InvoiceDetailShipping InvoiceDetailShipping { get; set; }

    // Other properties as per your XML
}

public class InvoiceDetailHeaderIndicator
{
}

public class InvoiceDetailLineIndicator
{
    [XmlAttribute("isTaxInLine")]
    public string IsTaxInLine { get; set; }
}

public class InvoicePartner
{
    public Contact Contact { get; set; }
}

public class Contact
{
    [XmlAttribute("addressID")]
    public string AddressID { get; set; }

    [XmlAttribute("role")]
    public string Role { get; set; }

    public Name Name { get; set; }

    public Email Email { get; set; }
}

public class Name
{
    [XmlAttribute("Xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Email
{
    [XmlText]
    public string Value { get; set; }

    [XmlAttribute("Name")]
    public string Name { get; set; }

    [XmlAttribute("preferredLang")]
    public string PreferredLang { get; set; }
}

public class InvoiceDetailShipping
{
    public Contact[] Contacts { get; set; }
}

public class InvoiceDetailorder
{
    public InvoiceDetailorderInfo InvoiceDetailorderInfo { get; set; }

    public InvoiceDetailItem InvoiceDetailItem { get; set; }
}

public class InvoiceDetailorderInfo
{
    public SupplierOrderInfo SupplierOrderInfo { get; set; }
}

public class SupplierOrderInfo
{
    [XmlAttribute("orderID")]
    public string OrderID { get; set; }
}

public class InvoiceDetailItem
{
    [XmlAttribute("invoiceLineNumber")]
    public string InvoiceLineNumber { get; set; }

    [XmlAttribute("quantasy")]
    public string Quantasy { get; set; }

    public UnitofMeasure UnitofMeasure { get; set; }

    public UnitPrice UnitPrice { get; set; }

    public InvoiceDetailItemReference InvoiceDetailItemReference { get; set; }

    public SubtotalAmount SubtotalAmount { get; set; }

    public GrossAmount GrossAmount { get; set; }

    public NetAmount NetAmount { get; set; }

    public Distribution Distribution { get; set; }

    public Comments Comments { get; set; }

    public Extrinsic Extrinsic { get; set; }
}

public class UnitofMeasure
{
    [XmlText]
    public string Value { get; set; }
}

public class UnitPrice
{
    public Money Money { get; set; }
}

public class Money
{
    [XmlAttribute("currency")]
    public string Currency { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class InvoiceDetailItemReference
{
    [XmlAttribute("lineNumber")]
    public string LineNumber { get; set; }

    public ItemID ItemID { get; set; }

    public Description Description { get; set; }

    public Classification Classification { get; set; }

    public Country Country { get; set; }
}

public class ItemID
{
    public SupplierPartID SupplierPartID { get; set; }
}

public class SupplierPartID
{
    [XmlText]
    public string Value { get; set; }
}

public class Description
{
    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Classification
{
    [XmlAttribute("domain")]
    public string Domain { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Country
{
    [XmlAttribute("isoCountryCode")]
    public string IsoCountryCode { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class SubtotalAmount
{
    public Money Money { get; set; }
}

public class GrossAmount
{
    public Money Money { get; set; }
}

public class NetAmount
{
    public Money Money { get; set; }
}

public class Distribution
{
    public Accounting Accounting { get; set; }

    public Charge Charge { get; set; }
}

public class Accounting
{
    [XmlAttribute("name")]
    public string Name { get; set; }

    public AccountingSegment[] AccountingSegments { get; set; }
}

public class AccountingSegment
{
    [XmlAttribute("id")]
    public string Id { get; set; }

    public Name SegmentName { get; set; }

    public Description SegmentDescription { get; set; }
}

public class Name
{
    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Description
{
    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Charge
{
    public Money Money { get; set; }
}

public class Comments
{
    [XmlText]
    public string Value { get; set; }

    [XmlAttribute("type")]
    public string Type { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    public Attachment Attachment { get; set; }
}

public class Attachment
{
    public URL URL { get; set; }
}

public class URL
{
    [XmlText]
    public string Value { get; set; }
}

public class Extrinsic
{
    [XmlAttribute("name")]
    public string Name { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class InvoiceDetailSummary
{
    public SubtotalAmount SubtotalAmount { get; set; }

    public Tax Tax { get; set; }

    public GrossAmount GrossAmount { get; set; }

    public NetAmount NetAmount { get; set; }

    public DueAmount DueAmount { get; set; }
}

public class Tax
{
    public Money Money { get; set; }

    public Description Description { get; set; }
}

public class DueAmount
{
    public Money Money { get; set; }
}

class Program
{
    static void Main()
    {
        CXML cxml = new CXML
        {
            PayloadID = "CVOpenICSAPRequest19102024-0000111610",
            Timestamp = "2024-01-10T23:21:56.617-08:00",
            Version = "1.2.044",
            Language = "en-US",
            Request = new Request
            {
                DeploymentMode = "test",
                InvoiceDetailRequest = new InvoiceDetailRequest
                {
                    InvoiceDetailRequestHeader = new InvoiceDetailRequestHeader
                    {
                        InvoiceOrigin = "supplier",
                        InvoiceDate = "2024-01-10T00:00:00-08:00",
                        Operation = "new",
                        Purpose = "standard",
                        InvoiceID = "PAWSCVAP19",
                        InvoiceDetailHeaderIndicator = new InvoiceDetailHeaderIndicator(),
                        InvoiceDetailLineIndicator = new InvoiceDetailLineIndicator { IsTaxInLine = "yes" },
                        InvoicePartners = new[]
                        {
                            new InvoicePartner
                            {
                                Contact = new Contact
                                {
                                    AddressID = "0030001179",
                                    Role = "remitTo",
                                    Name = new Name { Language = "en", Value = "30001179:: University" }
                                }
                            },
                            new InvoicePartner
                            {
                                Contact = new Contact
                                {
                                    AddressID = "0010003169",
                                    Role = "from",
                                    Name = new Name { Language = "en", Value = "University LLC" }
                                }
                            },
                            new InvoicePartner
                            {
                                Contact = new Contact
                                {
                                    AddressID = "",
                                    Role = "soldTo",
                                    Name = new Name { Language = "en-US", Value = "mask4@dummy.com" },
                                    Email = new Email { Value = "mask4@dummy.com" }
                                }
                            }
                        },
                        InvoiceDetailShipping = new InvoiceDetailShipping
                        {
                            Contacts = new[]
                            {
                                new Contact
                                {
                                    AddressID = "0010003169",
                                    Role = "shipFrom",
                                    Name = new Name { Language = "en", Value = "University LLC" },
                                    Email = new Email { Name = "default", PreferredLang = "en", Value = "mask4@dummy.com" }
                                },
                                new Contact
                                {
                                    AddressID = "1109",
                                    Role = "shipTo",
                                    Name = new Name { Language = "en", Value = "BMS Uni" }
                                }
                            }
                        },
                        PaymentTerm = new PaymentTerm { PayInNumberOfDays = "60" },
                        Comments = new Comments
                        {
                            Type = "Message",
                            Language = "en",
                            Value = "OpenICS invoice posting",
                            Attachment = new Attachment { URL = new URL { Value = "" } }
                        },
                        Extrinsic = new[]
                        {
                            new Extrinsic { Name = "invoiceSourceDocument", Value = "NoOrderInformation" },
                            new Extrinsic { Name = "invoiceSubmissionMethod", Value = "PaperViaICS" },
                            new Extrinsic { Name = "Source System", Value = "PWS" },
                            new Extrinsic { Name = "OriginatingSystemReferenceID", Value = "PWS1234" },
                            new Extrinsic { Name = "Payment Method", Value = "" },
                            new Extrinsic { Name = "Check Comments", Value = "" },
                            new Extrinsic { Name = "Payment Ref.", Value = "CVAP19" },
                            new Extrinsic { Name = "LOB", Value = "SPHE" },
                            new Extrinsic { Name = "SubLOB", Value = "CULVER DIGITAL" },
                            new Extrinsic { Name = "Paying Company Code", Value = "1281" },
                            new Extrinsic { Name = "Invoice Type", Value = "false" },
                            new Extrinsic { Name = "Purchasing Unit", Value = "North America" },
                            new Extrinsic { Name = "Lump Sum to be paid on", Value = "01/13/2024" },
                            new Extrinsic { Name = "Check Comments", Value = "Check Comments PAWS Integration" },
                            new Extrinsic { Name = "SPIDR URL", Value = "www.test.com" }
                        }
                    },
                    InvoiceDetailorder = new InvoiceDetailorder
                    {
                        InvoiceDetailorderInfo = new InvoiceDetailorderInfo
                        {
                            SupplierOrderInfo = new SupplierOrderInfo { OrderID = "Unknown" }
                        },
                        InvoiceDetailItem = new InvoiceDetailItem
                        {

------------



using System;
using System.IO;
using System.Xml.Serialization;

[XmlRoot("cXML", Namespace = "http://xml.cxml.org/schemas/cXML/1.2.044", IsNullable = false)]
public class CXML
{
    [XmlAttribute("payloadID")]
    public string PayloadID { get; set; }

    [XmlAttribute("timestamp")]
    public string Timestamp { get; set; }

    [XmlAttribute("version")]
    public string Version { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    public Request Request { get; set; }
}

public class Request
{
    [XmlAttribute("deploymentMode")]
    public string DeploymentMode { get; set; }

    public InvoiceDetailRequest InvoiceDetailRequest { get; set; }
}

public class InvoiceDetailRequest
{
    public InvoiceDetailRequestHeader InvoiceDetailRequestHeader { get; set; }
    public InvoiceDetailorder InvoiceDetailorder { get; set; }
    public InvoiceDetailSummary InvoiceDetailSummary { get; set; }
}

public class InvoiceDetailRequestHeader
{
    [XmlAttribute("invoiceOrigin")]
    public string InvoiceOrigin { get; set; }

    [XmlAttribute("invoiceDate")]
    public string InvoiceDate { get; set; }

    [XmlAttribute("operation")]
    public string Operation { get; set; }

    [XmlAttribute("purpose")]
    public string Purpose { get; set; }

    [XmlAttribute("invoiceID")]
    public string InvoiceID { get; set; }

    public InvoiceDetailHeaderIndicator InvoiceDetailHeaderIndicator { get; set; }
    public InvoiceDetailLineIndicator InvoiceDetailLineIndicator { get; set; }

    public InvoicePartner[] InvoicePartners { get; set; }

    [XmlElement("InvoiceDetailShipping")]
    public InvoiceDetailShipping InvoiceDetailShipping { get; set; }
    public Payment Term { get; set; }
    public Comments Comments { get; set; }
    public Extrinsic[] Extrinsic { get; set; }
}

public class InvoiceDetailHeaderIndicator
{
}

public class InvoiceDetailLineIndicator
{
    [XmlAttribute("isTaxInLine")]
    public string IsTaxInLine { get; set; }
}

public class InvoiceDetailShipping
{
    public Contact addressID { get; set; }

    public Contact role { get; set; }
}

public class Contact
{
    [XmlAttribute("addressID")]
    public string AddressID { get; set; }

    [XmlAttribute("role")]
    public string Role { get; set; }

    public Name Name { get; set; }

    [XmlElement("Email")]
    public Email Email { get; set; }
}

public class Name
{
    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Email
{
    [XmlText]
    public string Value { get; set; }
}

public class InvoicePartner
{
    public Contact Contact { get; set; }
}

public class Payment
{
    [XmlAttribute("payInNumberOfDays")]
    public string PayInNumberOfDays { get; set; }
}

public class Comments
{
    [XmlAttribute("type")]
    public string Type { get; set; }

    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }

    public Attachment Attachment { get; set; }
}

public class Attachment
{
    public URL URL { get; set; }
}

public class URL
{
    [XmlText]
    public string Value { get; set; }
}

public class Extrinsic
{
    [XmlAttribute("name")]
    public string Name { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class InvoiceDetailorder
{
    public InvoiceDetailorderInfo InvoiceDetailorderInfo { get; set; }
    public InvoiceDetailItem InvoiceDetailItem { get; set; }
}

public class InvoiceDetailorderInfo
{
    public SupplierOrderInfo SupplierOrderInfo { get; set; }
}

public class SupplierOrderInfo
{
    [XmlAttribute("orderID")]
    public string OrderID { get; set; }
}

public class InvoiceDetailItem
{
    [XmlAttribute("invoiceLineNumber")]
    public string InvoiceLineNumber { get; set; }

    [XmlAttribute("quantasy")]
    public string Quantasy { get; set; }

    public UnitofMeasure UnitofMeasure { get; set; }
    public UnitPrice UnitPrice { get; set; }
    public InvoiceDetailItemReference InvoiceDetailItemReference { get; set; }
    public SubtotalAmount SubtotalAmount { get; set; }
    public GrossAmount GrossAmount { get; set; }
    public NetAmount NetAmount { get; set; }
    public Distribution Distribution { get; set; }
    public Comments Comments { get; set; }
    public Extrinsic Extrinsic { get; set; }
}

public class UnitofMeasure
{
    [XmlText]
    public string Value { get; set; }
}

public class UnitPrice
{
    public Money Money { get; set; }
}

public class InvoiceDetailItemReference
{
    public ItemID ItemID { get; set; }
    public Description Description { get; set; }
    public Classification Classification { get; set; }
    public Country Country { get; set; }
}

public class ItemID
{
    public SupplierPartID SupplierPartID { get; set; }
}

public class SupplierPartID
{
    [XmlText]
    public string Value { get; set; }
}

public class Description
{
    [XmlAttribute("xml:lang")]
    public string Language { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Classification
{
    [XmlAttribute("domain")]
    public string Domain { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class Country
{
    [XmlAttribute("isoCountryCode")]
    public string IsoCountryCode { get; set; }

    [XmlText]
    public string Value { get; set; }
}

public class SubtotalAmount
{
    public Money Money { get; set; }
}

public class GrossAmount
{
    public Money Money { get; set; }
}

public class NetAmount
{
    public Money Money { get; set; }
}

public class Distribution
{
    public Accounting Accounting { get; set; }
    public Charge Charge { get; set; }
}

public class Accounting
{
    [XmlAttribute("name")]
    public string Name { get; set; }

    public AccountingSegment AccountingSegment { get; set; }
}

public class AccountingSegment
{
    [XmlAttribute("id")]
    public string Id { get; set; }

    public Name Name { get; set; }
    public Description Description { get; set; }
}

public class Charge
{
    public Money Money { get; set; }
}

public class InvoiceDetailSummary
{
    public SubtotalAmount SubtotalAmount { get; set; }
    public Tax Tax { get; set; }
    public GrossAmount GrossAmount { get; set; }
    public NetAmount NetAmount { get; set; }
    public DueAmount DueAmount { get; set; }
}

public class Tax
{
    public Money Money { get; set; }
    public Description Description { get; set; }
}

public class DueAmount
{
    public Money Money { get; set; }
}

public class Money
{
    [XmlAttribute("currency")]
    public string Currency { get; set; }

    [XmlText]
    public string Value { get; set; }
}

class Program
{
    static void Main()
    {
        // Create an instance of the CXML class and populate it with data
        CXML cxml = new CXML
        {
            PayloadID = "CVOpenICSAPRequest19102024-0000111610",
            Timestamp = "2024-01-10T23:21:56.617-08:00",
            Version = "1.2.044",
            Language = "en-US",
            Request = new Request
            {
                DeploymentMode = "test",
                InvoiceDetailRequest = new InvoiceDetailRequest
                {
                    InvoiceDetailRequestHeader = new InvoiceDetailRequestHeader
                    {
                        InvoiceOrigin = "supplier",
                        InvoiceDate = "2024-01-10T00:00:00-08:00",
                        Operation = "new",
                        Purpose = "standard",
                        InvoiceID = "PAWSCVAP19",
                        InvoiceDetailLineIndicator = new InvoiceDetailLineIndicator
                        {
                            IsTaxInLine = "yes"
                        },
                        InvoicePartners = new[]
                        {
                            new InvoicePartner
                            {
                                Contact = new Contact
                                {
                                    AddressID = "0030001179",
                                    Role = "remitTo",
                                    Name = new Name
                                    {
                                        Language = "en",
                                        Value = "30001179:: University"
                                    }
                                }
                            },
                            new InvoicePartner
                            {
                                Contact = new Contact
                                {
                                    AddressID = "0010003169",
                                    Role = "from",
                                    Name = new Name
                                    {
                                        Language = "en",
                                        Value = "University LLC"
                                    }
                                }
                            },
                            new InvoicePartner
                            {
                                Contact = new Contact
                                {
                                    AddressID = "",
                                    Role = "soldTo",
                                    Name = new Name
                                    {
                                        Language = "en-US",
                                        Value = "mask4@dummy.com"
                                    },
                                    Email = new Email
                                    {
                                        Value = "mask4@dummy.com"
                                    }
                                }
                            }
                        },
                        InvoiceDetailShipping = new InvoiceDetailShipping
                        {
                            addressID = new Contact
                            {
                                AddressID = "0010003169",
                                Role = "shipFrom",
                                Name = new Name
                                {
                                    Language = "en",
                                    Value = "University LLC"
                                },
                                Email = new Email
                                {
                                    Value = "mask4@dummy.com"
                                }
                            },
                            role = new Contact
                            {
                                AddressID = "1109",
                                Role = "shipTo",
                                Name = new Name
                                {
                                    Language = "en",
                                    Value = "BMS Uni"
                                }
                            }
                        },
                        Term = new Payment
                        {
                            PayInNumberOfDays = "60"
                        },
                        Comments = new Comments
                        {
                            Type = "Message",
                            Language = "en",
                            Value = "OpenICS invoice posting",
                            Attachment = new Attachment
                            {
                                URL = new URL
                                {
                                    Value = ""
                                }
                            }
                        },
                        Extrinsic = new[]
                        {
                            new Extrinsic
                            {
                                Name = "invoiceSourceDocument",
                                Value = "NoOrderInformation"
                            },
                            new Extrinsic
                            {
                                Name = "invoiceSubmissionMethod",
                                Value = "PaperViaICS"
                            },
                            new Extrinsic
                            {
                                Name = "Source System",
                                Value = "PWS"
                            },
                            new Extrinsic
                            {
                                Name = "OriginatingSystemReferenceID",
                                Value = "PWS1234"
                            },
                            new Extrinsic
                            {
                                Name = "Payment Method",
                                Value = ""
                            },
                            new Extrinsic
                            {
                                Name = "Check Comments",
                                Value = ""
                            },
                            new Extrinsic
                            {
                                Name = "Payment Ref.",
                                Value = "CVAP19"
                            },
                            new Extrinsic
                            {
                                Name = "LOB",
                                Value = "SPHE"
                            },
                            new Extrinsic
                            {
                                Name = "SubLOB",
                                Value = "CULVER DIGITAL"
                            },
                            new Extrinsic
                            {
                                Name = "Paying Company Code",
                                Value = "1281"
                            },
                            new Extrinsic
                            {
                                Name = "Invoice Type",
                                Value = "false"
                            },
                            new Extrinsic
                            {
                                Name = "Purchasing Unit",
                                Value = "North America"
                            },
                            new Extrinsic
                            {
                                Name = "Lump Sum to be paid on",
                                Value = "01/13/2024"
                            },
                            new Extrinsic
                            {
                                Name = "Check Comments",
                                Value = "Check Comments PAWS Intergration"
                            },
                            new Extrinsic
                            {
                                Name = "SPIDR URL",
                                Value = "www.test.com"
                            }
                        }
                    },
                    InvoiceDetailorder = new InvoiceDetailorder
                    {
                        InvoiceDetailorderInfo = new InvoiceDetailorderInfo
                        {
                            SupplierOrderInfo = new SupplierOrderInfo
                            {
                                OrderID = "Unknown"
                            }
                        },
                        InvoiceDetailItem = new InvoiceDetailItem
                        {
                            InvoiceLineNumber = "1",
                            Quantasy = "1",
                            UnitofMeasure = new UnitofMeasure
                            {
                                Value = "EA"
                            },
                            UnitPrice = new UnitPrice
                            {
                                Money = new Money
                                {
                                    Currency = "USD",
                                    Value = "307,640.00"
                                }
                            },
                            InvoiceDetailItemReference = new InvoiceDetailItemReference
                            {
                                ItemID = new ItemID
                                {
                                    SupplierPartID = new SupplierPartID
                                    {
                                        Value = ""
                                    }
                                },
                                Description = new Description
                                {
                                    Language = "en-US",
                                    Value = "COMMUNITY 2009/10"
                                },
                                Classification = new Classification
                                {
                                    Domain = "unspso",
                                    Value = "All"
                                },
                                Country = new Country
                                {
                                    IsoCountryCode = "US",
                                    Value = "United States"
                                }
                            },
                            SubtotalAmount = new SubtotalAmount
                            {
                                Money = new Money
                                {
                                    Currency = "USD",
                                    Value = "307,640.00"
                                }
                            },
                            GrossAmount = new GrossAmount
                            {
                                Money = new Money
                                {
                                    Currency = "USD",
                                    Value = "307,640.00"
                                }
                            },
                            NetAmount = new NetAmount
                            {
                                Money = new Money
                                {
                                    Currency = "USD",
                                    Value = "307,640.00"
                                }
                            },
                            Distribution = new Distribution
                            {
                                Accounting = new Accounting
                                {
                                    Name = "DistributionCharge",
                                    Accounting


---------------------------------------------------------





